# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /products/{productId}_get for http method type GET 
# RoostTestHash=ab8efa24ed
# 
# 

# ********RoostGPT********
Feature: Validate API behavior for Get Product By ID

  Background:
    * url target = karate.properties['API_HOST']
    * def auth_token = karate.properties['AUTH_TOKEN']
    * def csvData = read('products_productId_get_karate.csv')
    * def payload = { skipHeader: true, data: '#(csvData)' }

  Scenario: Verify correct API behavior with valid input payloads
    Given path '/products/{productId}'
    And header Authorization = auth_token
    And request payload
    When method get
    Then status 200
    And match responseHeaders contains { 'Content-Type': 'application/json' }
    And match response == { id: '#number', name: '#string', description: '#string', price: '#number' }

    # Assert each required property in the response body against the provided schema
    And match response.id == '#number'
    And match response.name == '#string'
    And match response.description == '#string'
    And match response.price == '#number'

    # Assert the correspondence of schema properties to their specified formats, patterns, and data types
    And match response.id == '#regex[0-9]{1,20}'
    And match response.name == '#regex[a-z]{1,20}'
    And match response.description == '#regex[a-z]{1,100}'
    And match response.price == '#regex[0-9]{1,10}'

  Scenario: Verify API behavior for non-existing product
    Given path '/products/{nonExistingProductId}'
    And header Authorization = auth_token
    And request payload
    When method get
    Then status 404
