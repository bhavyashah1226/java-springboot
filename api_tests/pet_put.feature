# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet_put for http method type PUT 
# RoostTestHash=3c023e4a7b
# 
# 

# ********RoostGPT********
Feature: Petstore Pet API

Background: 
  * url target
  * def auth = { token: '#(authToken)' }
  * def headers = { Authorization: '#(auth)', 'Content-Type': 'application/json' }

Scenario: Update an existing pet
  Given path '/v2/pet'
  And request { "id": 1, "category": { "id": 1, "name": "Dogs" }, "name": "doggie", "photoUrls": [ "url1", "url2" ], "tags": [ { "id": 1, "name": "tag1" } ], "status": "available" }
  When method put
  Then status 200
  And match response == { "id": '#number', "category": { "id": '#number', "name": '#string' }, "name": '#string', "photoUrls": '#[]', "tags": '#[]', "status": '#string' }

Scenario: Update a pet with invalid ID
  Given path '/v2/pet'
  And request { "id": 'invalid', "category": { "id": 1, "name": "Dogs" }, "name": "doggie", "photoUrls": [ "url1", "url2" ], "tags": [ { "id": 1, "name": "tag1" } ], "status": "available" }
  When method put
  Then status 400

Scenario: Update a non-existent pet 
  Given path '/v2/pet'
  And request { "id": 9999, "category": { "id": 1, "name": "Dogs" }, "name": "doggie", "photoUrls": [ "url1", "url2" ], "tags": [ { "id": 1, "name": "tag1" } ], "status": "available" }
  When method put
  Then status 404
