# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Azure Open AI and AI Model roost-gpt4-32k
# 
# Test generated for /products/{productId}_put for http method type PUT in karate framework
# RoostTestHash=7b2a6b6959
# 
# 

# ********RoostGPT********
Feature: Product Management

Background:
  * configure target = { $processEnvironment.API_HOST }
  * def authorizationToken = { $processEnvironment.AUTH_TOKEN }
  * def requestBody= read('products_productId_put_karate.csv')
  * def readCsv = function(file){ return karate.read(file) }  
  * def csvPayload = readCsv('products_productId_put_karate.csv') 
  * configure headers = { Authorization: '#(authorizationToken)', 'Content-Type': 'application/json' }

Scenario: Update product information using product Id

# Get the product information
Given path 'products', csvPayload.productId
When method get
Then status 200
And match response contains { id: '#(csvPayload.productId)'}

# Update the product information
* set requestBody.id = csvPayload.productId
* set requestBody.name = csvPayload.name
* set requestBody.description = csvPayload.description
* set requestBody.price = csvPayload.price
Given path 'products', csvPayload.productId
And request requestBody
When method put
Then status 200
And match response contains { id: '#(csvPayload.productId)', name: '#(csvPayload.name)', description: '#(csvPayload.description)', price: '#(csvPayload.price)'}

# Validate updated product information
Given path 'products', csvPayload.productId
When method get
Then status 200
And match response contains { id: '#(csvPayload.productId)', name: '#(csvPayload.name)', description: '#(csvPayload.description)', price: '#(csvPayload.price)'}
