# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet/findByStatus_get for http method type GET 
# RoostTestHash=467fc95f1c
# 
# 

# ********RoostGPT********
```gherkin
Feature: Find Pets by Status

  Background:
    * url target
    * def authToken = karate.get('{{$processEnvironment.AUTH_TOKEN}}')
    * configure headers = { Authorization: '#(authToken)' }

  Scenario: Verify successful operation when valid status value is provided in the request
    Given path '/v2/pet/findByStatus'
    And param status = 'available'
    When method get
    Then status 200
    And match response contains {name:'#string', photoUrls:'#[]'}
    And match response[*].id == '#number'
    And match response[*].category == '#object'
    And match response[*].tags == '#[]'
    And match response[*].status == 'available'
  
  Scenario Outline: Verify error message when invalid status value is provided in the request
    Given path '/v2/pet/findByStatus'
    And param status = '<invalid_status>'
    When method get
    Then status 400
    And match response.message == 'Invalid status value'

    Examples: 
      | invalid_status |
      | 'unavailable'  |
      | 'unknown'      |
      | 'sold'         |
```
This Karate feature file contains two scenarios. The first scenario checks the successful operation when a valid status value is provided in the request. The second scenario uses an example table to verify that an error message is returned when an invalid status value is provided in the request.