# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /products/{productId}_put for http method type PUT 
# RoostTestHash=7b2a6b6959
# 
# 

# ********RoostGPT********
Feature: Update Product

  Background:
    * url target
    * def authToken = karate.properties['AUTH_TOKEN']
    * def payload = read('products_productId_put_.csv')
    * configure headers = { Authorization: '#(authToken)' }

  Scenario: Update a product in the store with form data
    Given path 'products', payload.productId
    And request payload
    When method put
    Then status 200
    And match response == { id: '#(payload.id)', name: '#(payload.name)', description: '#(payload.description)', price: '#(payload.price)' }

  Scenario: Attempt to update a non-existing product
    Given path 'products', 'non-existing-id'
    And request payload
    When method put
    Then status 404
