/*
Test generated by RoostGPT for test JavaUnitTest using AI Type Open AI and AI Model gpt-4

1. Null Scenario: Test the getName() function when the name is set to null. The expected result should be null.

2. Empty String Scenario: Test the getName() function when the name is set to an empty string. The expected result should be an empty string.

3. Single Character Scenario: Test the getName() function when the name is set to a single character. The expected result should be that single character.

4. Normal Scenario: Test the getName() function when the name is set to a normal string. The expected result should be the same string.

5. Special Character Scenario: Test the getName() function when the name is set to a string containing special characters. The expected result should be the same string with special characters.

6. Numeric String Scenario: Test the getName() function when the name is set to a string of numbers. The expected result should be the same string of numbers.

7. Long String Scenario: Test the getName() function when the name is set to a long string. The expected result should be the same long string.

8. Unicode Characters Scenario: Test the getName() function when the name is set to a string containing unicode characters. The expected result should be the same string with unicode characters.

9. Non-English Characters Scenario: Test the getName() function when the name is set to a string containing non-English characters. The expected result should be the same string with non-English characters.

10. Leading and Trailing Spaces Scenario: Test the getName() function when the name is set to a string with leading and/or trailing spaces. The expected result should be the same string including the spaces.
*/
package com.bootexample4.products.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class Product_getName_8400ac6fb7_Test {

    private Product product;

    @BeforeEach
    public void init() {
        product = new Product();
    }

    @Test
    public void testGetName_Null() {
        product.setName(null);
        assertNull(product.getName());
    }

    @Test
    public void testGetName_Empty() {
        product.setName("");
        assertEquals("", product.getName());
    }

    @Test
    public void testGetName_SingleChar() {
        product.setName("a");
        assertEquals("a", product.getName());
    }

    @Test
    public void testGetName_Normal() {
        product.setName("product1");
        assertEquals("product1", product.getName());
    }

    @Test
    public void testGetName_SpecialChar() {
        product.setName("@product");
        assertEquals("@product", product.getName());
    }

    @Test
    public void testGetName_Numeric() {
        product.setName("1234");
        assertEquals("1234", product.getName());
    }

    @Test
    public void testGetName_LongString() {
        product.setName("This is a very long product name");
        assertEquals("This is a very long product name", product.getName());
    }

    @Test
    public void testGetName_Unicode() {
        product.setName("\u00A9");
        assertEquals("\u00A9", product.getName());
    }

    @Test
    public void testGetName_NonEnglish() {
        product.setName("produkt");
        assertEquals("produkt", product.getName());
    }

    @Test
    public void testGetName_LeadingTrailingSpaces() {
        product.setName(" product ");
        assertEquals(" product ", product.getName());
    }
}
