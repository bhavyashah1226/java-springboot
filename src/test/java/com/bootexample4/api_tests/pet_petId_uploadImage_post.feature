# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet/{petId}/uploadImage_post for http method type POST 
# RoostTestHash=8dac89cb33
# 
# 

# ********RoostGPT********
Feature: Testing endpoint /v2/pet/{petId}/uploadImage

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token']
  * configure headers = { Authorization: '#(authToken)' }

Scenario Outline: Upload an image for a pet
  Given path 'v2', 'pet', '<petId>', 'uploadImage'
  And multipart field 'additionalMetadata' = '<additionalMetadata>'
  And multipart file 'file' = { read: '<filePath>', filename: '<fileName>', contentType: '<fileContentType>' }
  When method post
  Then status 200
  And match response contains { code: '#number', type: '#string', message: '#string' }
  
  Examples:
    | petId | additionalMetadata | filePath      | fileName    | fileContentType |
    | 1     | 'Test metadata'   | 'image1.jpg'  | 'image1'    | 'image/jpeg'    |
    | 2     | 'Test metadata'   | 'image2.png'  | 'image2'    | 'image/png'     |
    | 3     | 'Test metadata'   | 'image3.gif'  | 'image3'    | 'image/gif'     |
