# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet/{petId}/uploadImage_post for http method type POST 
# RoostTestHash=8dac89cb33
# 
# 

# ********RoostGPT********
Feature: Pet Image Upload

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', 'defaultAuthToken')
  * def headers = { Authorization: '#(authToken)' }

Scenario Outline: Upload image to the pet
  Given path '/v2/pet/', '<petId>', '/uploadImage'
  And headers headers
  And multipart field 'additionalMetadata' = '<additionalMetadata>'
  And multipart file 'file' = { read: 'image.jpg', filename: 'image.jpg', contentType: 'image/jpeg' }
  When method post
  Then status 200
  And match response == { code: '#number', type: '#string', message: '#string' }

Examples:
  | petId | additionalMetadata |
  | 1234  | 'Test metadata'   |
  | 5678  | 'Another test'    |
