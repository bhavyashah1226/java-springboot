# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet_put for http method type PUT 
# RoostTestHash=ec103be570
# 
# 

# ********RoostGPT********
Feature: Pet Store API Tests

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', 'dummyToken')
  * configure headers = { Authorization: '#(authToken)' }

Scenario: Update an existing pet
  Given path '/v2/pet'
  And request { 
    "id": '#(petId)',
    "category": {
      "id": '#(categoryId)',
      "name": '#(categoryName)'
    },
    "name": '#(petName)',
    "photoUrls": '#(photoUrls)',
    "tags": [
      {
        "id": '#(tagId)',
        "name": '#(tagName)'
      }
    ],
    "status": '#(status)'
  }
  When method put
  Then status 200
  And match response == { "id": '#(petId)', "name": '#(petName)', "status": '#(status)' }

Examples:
  | petId | categoryId | categoryName | petName | photoUrls    | tagId | tagName | status  |
  | 1      | 2          | 'dogs'       | 'Rex'   | ['url1', 'url2'] | 1     | 'tag1'  | 'available' |
