# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/{petId}_get for http method type GET 
# RoostTestHash=561990ad39
# 
# 

# ********RoostGPT********
Feature: Find pet by ID

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']
  * configure headers = { Authorization: '#(authToken)' }

Scenario Outline: Return a single pet using valid pet ID
  Given path 'v2/pet', <petId>
  When method get
  Then status 200
  And match response contains {name: '#string', photoUrls: '#[]'}
  And match response.name == <petName>

  Examples:
    | petId | petName  |
    | 123   | 'doggie' |
    | 456   | 'kitty'  |

Scenario Outline: Return error when using invalid pet ID
  Given path 'v2/pet', <petId>
  When method get
  Then status 400

  Examples:
    | petId |
    | 'abc' |
    | '-1'  |

Scenario: Return error when pet not found
  Given path 'v2/pet/0'
  When method get
  Then status 404
