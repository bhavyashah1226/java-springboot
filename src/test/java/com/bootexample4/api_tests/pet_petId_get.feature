# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet/{petId}_get for http method type GET 
# RoostTestHash=018c365850
# 
# 

# ********RoostGPT********
Feature: Find pet by ID

Background: 
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', 'dummyToken')
  * configure headers = { Authorization: '#(authToken)' }

Scenario Outline: Validate successful operation for getPetById API

    Given path '/v2/pet/', <petId>
    When method get
    Then status 200
    And match response contains {id:'#number', category: '#object', name: '#string', photoUrls: '#[]', tags: '#[]', status: '#string'}
    And match response.id == <petId>
    And match response.name == 'doggie'

    Examples:
    | petId |
    | 1     |
    | 2     |
    | 3     |

Scenario Outline: Validate error scenarios for getPetById API

    Given path '/v2/pet/', <petId>
    When method get
    Then status <statusCode>

    Examples:
    | petId | statusCode |
    | 'abc' | 400        |
    | 999   | 404        |
