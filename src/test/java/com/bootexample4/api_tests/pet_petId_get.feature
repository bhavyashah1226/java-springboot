# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet/{petId}_get for http method type GET 
# RoostTestHash=018c365850
# 
# 

# ********RoostGPT********
Feature: Pet Store API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def auth_token = karate.properties['auth.token'] || karate.get('authToken', 'defaultToken')
  * def fetchPetById = function(petId) {
    return karate.call('getPetById.feature', { petId: petId });
  }

Scenario: Find pet by ID
  Given path 'v2', 'pet', '#(petId)'
  And header Authorization = auth_token
  When method get
  Then status 200
  And match response == { id: '#number', category: '#object', name: 'doggie', photoUrls: '#array', tags: '#array', status: '#string' }
  And match response.category == { id: '#number', name: '#string' }
  And match each response.photoUrls == '#string'
  And match each response.tags == { id: '#number', name: '#string' }

Scenario: Invalid ID supplied
  Given path 'v2', 'pet', '-1'
  And header Authorization = auth_token
  When method get
  Then status 400

Scenario: Pet not found
  Given path 'v2', 'pet', '0'
  And header Authorization = auth_token
  When method get
  Then status 404
