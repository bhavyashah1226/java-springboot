# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet/{petId}_get for http method type GET 
# RoostTestHash=018c365850
# 
# 

# ********RoostGPT********
Feature: Pet Store API - Find pet by ID

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', 'myDefaultAuthToken')
  * configure headers = { Authorization: '#(authToken)' }

Scenario Outline: Validate the successful operation of the find pet by ID endpoint
  Given path '/v2/pet/', '<petId>'
  When method get
  Then status 200
  And match response == { id: '#number', category: { id: '#number', name: '#string' }, name: '#string', photoUrls: '#[] string', tags: '#[] { id: '#number', name: '#string' }', status: '#string' }

  Examples:
    | petId |
    | 1     |
    | 2     |
    | 3     |

Scenario Outline: Validate the unsuccessful operation of the find pet by ID endpoint with invalid petId
  Given path '/v2/pet/', '<petId>'
  When method get
  Then status 400

  Examples:
    | petId |
    | 'abc' |
    | '-1'  |
    | '0'   |

Scenario Outline: Validate the unsuccessful operation of the find pet by ID endpoint with non-existent petId
  Given path '/v2/pet/', '<petId>'
  When method get
  Then status 404

  Examples:
    | petId |
    | 9999  |
    | 8888  |
    | 7777  |
