# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/{petId}/uploadImage_post for http method type POST 
# RoostTestHash=8dac89cb33
# 
# 

# ********RoostGPT********
Feature: uploads an image

Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * configure headers = { api_key: '#(karate.properties['AUTH_TOKEN'])' }

Scenario Outline: Upload image with valid pet ID, additional metadata, and file
    Given path '/v2/pet/', '<petId>', '/uploadImage'
    And multipart file file = { read: '#(filePath)', formattedFileName: '#(fileName)', contentType: 'image/jpeg' }
    And multipart field additionalMetadata = '#(additionalMetadata)'
    When method post
    Then status 200
    And match response.code == #number
    And match response.type == '#string'
    And match response.message == '#string'
    
Examples:
    | petId | additionalMetadata | filePath                  | fileName  |
    | 123   | 'Test Metadata'    | 'classpath:images/pet1.jpg' | 'pet1.jpg' |
    | 456   | 'Test Metadata'    | 'classpath:images/pet2.jpg' | 'pet2.jpg' |
