# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/{petId}/uploadImage_post for http method type POST 
# RoostTestHash=8dac89cb33
# 
# 

# ********RoostGPT********
Feature: Test /v2/pet/{petId}/uploadImage endpoint

Background: 
  * def urlBase = karate.properties['url.base'] || 'http://localhost:8080'
  * configure headers = {Authorization: '#(karate.properties['AUTH_TOKEN'])'}

Scenario Outline: Test upload image with valid payload
  
  Given url urlBase + '/v2/pet/' + <petId> + '/uploadImage'
  And multipart field 'additionalMetadata' = <additionalMetadata>
  And multipart file 'file' = {read: 'path/to/file.jpg', contentType: 'image/jpeg'}
  When method post
  Then status 200
  And match response contains {code:'#number', type:'#string', message:'#string'}

  Examples: 
    | petId | additionalMetadata |
    | 1     | Sample metadata    |
    | 2     | Another metadata   |

Scenario Outline: Test upload image with missing parameters
  
  Given url urlBase + '/v2/pet/' + <petId> + '/uploadImage'
  And multipart field 'additionalMetadata' = <additionalMetadata>
  When method post
  Then status 400
  And match response contains {code:'#number', type:'#string', message:'#string'}

  Examples: 
    | petId | additionalMetadata |
    | 1     | Sample metadata    |
    | 2     | Missing file       |

