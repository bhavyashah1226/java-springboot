# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/findByTags_get for http method type GET 
# RoostTestHash=9124f669d9
# 
# 

# ********RoostGPT********
Feature: Tests for /v2/pet/findByTags API

Background: 
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * def authToken = karate.properties['AUTH_TOKEN']
  * url urlBase
  * header Authorization = authToken

Scenario Outline: Validate a successful responses of GET /v2/pet/findByTags

  Given path '/v2/pet/findByTags'
  And param tags = '<tags>'
  When method get
  Then status 200
  Then match response contains {'name': '#string', 'photoUrls': '#[] string'}
  And assert response.every(it => it.id == '#integer' && it.category.id == '#integer' && it.category.name == '#string' && it.status == '#string') 

  Examples:
    | tags                    |
    | ["pet"]                 |
    | ["cat", "dog", "owl"]   |
    | ["rabbit", "eagle"]     |
    | ["snake", "parrot"]     |

Scenario Outline: Validate unsuccessful responses of GET /v2/pet/findByTags

  Given path '/v2/pet/findByTags'
  And param tags = '<tags>'
  When method get
  Then status 400
  And match response == {'description': 'Invalid tag value'}

  Examples:
    | tags                      |
    | ["invalid"]               |
    | ["not_exist"]             |
    | ["error", "test", "fail"] |
