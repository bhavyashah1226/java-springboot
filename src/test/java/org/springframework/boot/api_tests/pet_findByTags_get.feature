# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/findByTags_get for http method type GET 
# RoostTestHash=9124f669d9
# 
# 

# ********RoostGPT********
Feature: Test the '/v2/pet/findByTags' endpoint

Background:
  * def urlBase = karate.properties['url.base'] || 'http://localhost:8080'
  * url urlBase
  * def auth_token = karate.properties['AUTH_TOKEN']
  * def responseSchema = {type:"array",items:{"type":"object","required":["name","photoUrls"]}}

Scenario Outline: Test the '/v2/pet/findByTags' endpoint with multiple tags in query parameters
  Given path '/v2/pet/findByTags'
  And param tags = '<tags>'
  And header Authorization = auth_token
  When method GET
  Then status 200
  And match response == responseSchema
  And match each response contains {name: '#string', photoUrls: '#[]'}
  Examples:
    | tags           |
    | ['pet1', 'pet2'] |
    | ['pet3', 'pet4'] | 

Scenario Outline: Test the '/v2/pet/findByTags' endpoint with missing 'tags' parameter 
  Given path '/v2/pet/findByTags'
  And header Authorization = auth_token
  When method GET
  Then status 400
  Examples:
    | tags           |
    | []             |
    | ['']           |

Scenario Outline: Test the '/v2/pet/findByTags' endpoint with invalid access token 
  Given path '/v2/pet/findByTags'
  And param tags = '<tags>'
  And header Authorization = 'invalidToken'
  When method GET
  Then status 400
  Examples:
    | tags           |
    | ['pet1']       |
    | ['pet2']       |
