# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/findByStatus_get for http method type GET 
# RoostTestHash=44cafec54d
# 
# 

# ********RoostGPT********
Feature: Find pets by status

Background: 
* def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
* url urlBase 
* def auth_token = karate.properties['AUTH_TOKEN']
* def getHeaders = function(){ return {Authorization: 'Bearer ' + auth_token}}

Scenario Outline: Verify the get pet by status API when valid status is provided

Given path '/v2/pet/findByStatus'
And param status = '<status>'
And header Authorization = auth_token
When method GET
Then status 200
And header Content-Type == 'application/json'
And match each response contains {"status": '#string', "name": '#string', "photoUrls": '#array'}
And schema response == {"id": "#number", "category": {"id": "#number", "name": "#string"}, "name": "#string", "photoUrls": '#array', "tags": '#array', "status": "#string"}

Examples:
| 'available' | 'pending' | 'sold' |

Scenario Outline: Verify the get pet by status API when invalid status is provided

Given path '/v2/pet/findByStatus'
And param status = '<status>'
And header Authorization = auth_token
When method GET
Then status 400

Examples:
| 'invalid_status' |
