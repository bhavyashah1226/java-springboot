# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet_put for http method type PUT 
# RoostTestHash=ec103be570
# 
# 

# ********RoostGPT********
Feature: Pet Store API Tests

Background: 
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', '{{ $processEnvironment.AUTH_TOKEN }}')
  * def authHeader = { Authorization: '#(authToken)' }

Scenario: Update an existing pet
  Given path '/v2/pet'
  And request
  """
  {
    "id": #(petId),
    "category": {
      "id": #(categoryId),
      "name": "#(categoryName)"
    },
    "name": "#(petName)",
    "photoUrls": ["#(photoUrl)"],
    "tags": [
      {
        "id": #(tagId),
        "name": "#(tagName)"
      }
    ],
    "status": "#(status)"
  }
  """
  And headers authHeader
  When method put
  Then status 200
  And match response contains 
  """
  {
    "id": "#(petId)",
    "category": {
      "id": "#(categoryId)",
      "name": "#(categoryName)"
    },
    "name": "#(petName)",
    "photoUrls": ["#(photoUrl)"],
    "tags": [
      {
        "id": "#(tagId),
        "name": "#(tagName)"
      }
    ],
    "status": "#(status)"
  }
  """

Examples:
  | petId | categoryId | categoryName | petName | photoUrl       | tagId | tagName | status   |
  | 1     | 1          | 'Dogs'       | 'Rex'   | 'www.url1.com' | 1     | 'tag1'  | 'available' |
  | 2     | 2          | 'Cats'       | 'Tom'   | 'www.url2.com' | 2     | 'tag2'  | 'sold'      |
