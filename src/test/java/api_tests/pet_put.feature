# ********RoostGPT********

# Test generated by RoostGPT for test products-karate using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet_put for http method type PUT 
# RoostTestHash=ec103be570
# 
# 

# ********RoostGPT********
Feature: Pet Store API Tests

Background: 
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', '{{ $processEnvironment.AUTH_TOKEN }}')
  * def authHeader = { Authorization: '#(' + authToken + ')' }

Scenario: Update an existing pet
  Given path '/v2/pet'
  And request { 
                 "id": 1, 
                 "category": { "id": 1, "name": "Dogs" }, 
                 "name": "doggie", 
                 "photoUrls": ["url1", "url2"], 
                 "tags": [{ "id": 1, "name": "tag1" }], 
                 "status": "available" 
               }
  And headers authHeader
  When method put
  Then status 200
  And match response == 
        { 
          "id": '#number', 
          "category": { "id": '#number', "name": '#string' }, 
          "name": '#string', 
          "photoUrls": ['#string'], 
          "tags": [{ "id": '#number', "name": '#string' }], 
          "status": '#string' 
        }

Scenario Outline: Error scenarios for updating a pet
  Given path '/v2/pet'
  And request <body>
  And headers authHeader
  When method put
  Then status <statusCode>
  And match response.description == <description>

  Examples:
    | body | statusCode | description           |
    | {}   | 400        | 'Invalid ID supplied' |
    | null | 404        | 'Pet not found'       |
    | ''   | 405        | 'Validation exception'|
