# ********RoostGPT********

# Test generated by RoostGPT for test MultipleApiSpec using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /api/device/camera/feature/alert_post for http method type POST 
# RoostTestHash=c211c7fbe6
# 
# 

# ********RoostGPT********
Feature: Testing the /api/device/camera/feature/alert Endpoint

Background:
* def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
* url urlBase
* def authToken = karate.properties['auth.token'] || karate.get('authToken', 'YOUR_DEFAULT_AUTH_TOKEN')
* configure headers = { 'Authorization': '#(authToken)' }

Scenario Outline: Test POST method to create camera alerts
  Given path '/api/device/camera/feature/alert'
  And request { "sn": "<sn>", "cameraId": "<cameraId>", "timestamp": "<timestamp>", "confidence": <confidence>, "alert": "<alert>", "subAlert": "<subAlert>", "photoUrl": "<photoUrl>", "videoUrl": "<videoUrl>" }
  When method post
  Then status 201
  And match response == { "description": "alert created" }
  And match responseHeaders contains { "Content-Type": "application/json" }

  Examples:
    | sn           | cameraId                             | timestamp                 | confidence | alert     | subAlert | photoUrl | videoUrl                   |
    | '0904H210008'| 'c79794c4-829d-11ee-b962-0242ac120002' | '2023-11-29T09:12:33.001Z' | 0.67      | 'intrusion' | 'person' | 'video'  | 'https://ipfront.com'     |

Scenario: Test POST method with invalid input
  Given path '/api/device/camera/feature/alert'
  And request { "sn": "", "cameraId": "c79794c4-829d-11ee-b962-0242ac120002", "timestamp": "2023-11-29T09:12:33.001Z", "confidence": 0.67, "alert": "intrusion", "subAlert": "person", "photoUrl": "video", "videoUrl": "https://ipfront.com" }
  When method post
  Then status 400
  And match response == { "description": "invalid input, object invalid" }
  And match responseHeaders contains { "Content-Type": "application/json" }
