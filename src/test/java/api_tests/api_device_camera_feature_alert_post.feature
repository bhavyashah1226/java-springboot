# ********RoostGPT********

# Test generated by RoostGPT for test MultipleApiSpec using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /api/device/camera/feature/alert_post for http method type POST 
# RoostTestHash=c211c7fbe6
# 
# 

# ********RoostGPT********
Feature: Testing the /api/device/camera/feature/alert Endpoint

Background:
* def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
* url urlBase
* def authToken = karate.properties['auth.token'] || karate.get('authToken', 'someDefaultToken')
* configure headers = {Authorization: '#(authToken)'}

Scenario: Testing POST method with valid request body
Given path '/api/device/camera/feature/alert'
And request { "sn": "0904H210008", "cameraId": "c79794c4-829d-11ee-b962-0242ac120002", "timestamp": "2023-11-29T09:12:33.001Z", "confidence": 0.67, "alert": "intrusion", "subAlert": "person", "photoUrl": "video", "videoUrl": "https://ipfront.com" }
When method post
Then status 201
And match response == { "description": "alert created" }

Scenario: Testing POST method with invalid request body
Given path '/api/device/camera/feature/alert'
And request { "sn": "", "cameraId": "c79794c4-829d-11ee-b962-0242ac120002", "timestamp": "2023-11-29T09:12:33.001Z", "confidence": 0.67, "alert": "intrusion", "subAlert": "person", "photoUrl": "video", "videoUrl": "https://ipfront.com" }
When method post
Then status 400
And match response == { "description": "invalid input, object invalid" }
