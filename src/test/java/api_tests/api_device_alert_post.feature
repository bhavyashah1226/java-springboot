# ********RoostGPT********

# Test generated by RoostGPT for test MultipleApiSpec using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /api/device/alert_post for http method type POST 
# RoostTestHash=f92ec5d141
# 
# 

# ********RoostGPT********
Feature: Testing /api/device/alert endpoint

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', 'my_default_auth_token')
  * configure headers = { Authorization: '#(authToken)' }

Scenario: Send device online/offline status to user via etown
  Given path '/api/device/alert'
  And request { jetson_uuid: 'd290f1ee-6c54-4b01-90e6-d701748f0851', status: 'offline', timestamp: '2023-11-29T09:12:33.001Z' }
  When method post
  Then status 201
  And match response == { description: 'alert created' }
  And match responseHeaders contains { 'Content-Type': 'application/json' }

Scenario Outline: Verify different combinations of request parameters and request bodies
  Given path '/api/device/alert'
  And request { jetson_uuid: '<jetson_uuid>', status: '<status>', timestamp: '<timestamp>' }
  When method post
  Then status <status_code>
  And match response == { description: '<description>' }

  Examples:
    | jetson_uuid                           | status   | timestamp             | status_code | description         |
    | 'd290f1ee-6c54-4b01-90e6-d701748f0851' | 'online' | '2023-11-29T09:12:33.001Z' | 201         | 'alert created'     |
    | 'd290f1ee-6c54-4b01-90e6-d701748f0851' | 'offline' | '2023-11-29T09:12:33.001Z' | 201         | 'alert created'     |
    | 'invalid_uuid'                        | 'offline' | '2023-11-29T09:12:33.001Z' | 400         | 'invalid input, object invalid'     |
    | 'd290f1ee-6c54-4b01-90e6-d701748f0851' | 'invalid_status' | '2023-11-29T09:12:33.001Z' | 400         | 'invalid input, object invalid'     |
